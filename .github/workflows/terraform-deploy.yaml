name: Reviews App Image CI

on:
  push:
    branches:
    - feature/**
    - staging
    - main
  # pull_request:
  #   branches: [ "main" ]

# required permissions by GitHub Actions for assuming AWS IAM role
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
env:
  AWS_REGION: "us-east-1"
  ENVIRONMENT_STAGE: ${{ (github.ref == 'refs/heads/main' && 'production') || (github.ref == 'refs/heads/staging' && 'staging') || 'dev' }}
jobs:
  app-build-and-deploy:
    environment: ${{ (github.ref == 'refs/heads/main' && 'production') || (github.ref == 'refs/heads/staging' && 'staging') || 'dev' }}
    runs-on: ubuntu-latest
    steps:
    # checkout code
    - name: Checkout Branch
      uses: actions/checkout@v3

    # login to AWS
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ vars.IAM_ROLE }}
        role-session-name: GitHubActionsCIRoleSession
        aws-region: ${{ env.AWS_REGION }}

    # Login to ECR of the current account
    - id: login-ecr
      if: github.ref != 'refs/heads/main'
      name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Backend - Build, tag, and push docker image to Amazon ECR
      if: github.ref != 'refs/heads/main'
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: reviews-api
        IMAGE_TAG: ${{ github.sha }}
      working-directory: ./api-backend
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: Frontend - Build, tag, and push docker image to Amazon ECR
      if: github.ref != 'refs/heads/main'
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: reviews-frontend
        IMAGE_TAG: ${{ github.sha }}
      working-directory: ./frontend
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: Login to EKS - update kubeconfig
      run: aws eks update-kubeconfig --name project-phoenix-eks-${ENVIRONMENT_STAGE} --region $AWS_REGION

    # Backend: Deploy image to Kubernetes as a (Deployment|StatefulSet|Job|CronJob|DaemonSet) + Networking (Service(ClusterIP|LoadBalancer)|Ingress|Service Mesh)
    - name: Backend - Deploy to Kubernetes
      env:
        SEMANTIC_TAG: "v1.0.2"  # Manually set
      run: |
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          IMAGE_TAG=${{ env.SEMANTIC_TAG }}
        else
          IMAGE_TAG=${{ github.sha }}
        fi

        helm upgrade --install reviews-app-backend ./app-helm-chart \
          --values ./app-helm-chart/values/backend/${ENVIRONMENT_STAGE}-values.yaml \
          --namespace reviews-app --create-namespace \
          --set image.tag="$IMAGE_TAG"

    - name: Frontend - Deploy to Kubernetes
      env:
        SEMANTIC_TAG: "v1.0.1"  # Manually set
      run: |
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          IMAGE_TAG=${{ env.SEMANTIC_TAG }}
        else
          IMAGE_TAG=${{ github.sha }}
        fi

        helm upgrade --install reviews-app-frontend ./app-helm-chart \
          --values ./app-helm-chart/values/frontend/${ENVIRONMENT_STAGE}-values.yaml \
          --namespace reviews-app --create-namespace \
          --set image.tag="$IMAGE_TAG"